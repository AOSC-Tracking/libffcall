# This is the developer's -*-Makefile-*-, not the user's makefile.
# Do not use it unless you know exactly what you do!

THISFILE = Makefile.devel
LN = ln -s
RM = rm -f

# ============ Rules that require cross-compilation tools ============

HOST = i486-linux
CPU = i386
GCC = gcc
GCCFLAGS = -O2 -fno-omit-frame-pointer -fPIC -DHAVE_LONG_LONG_INT -DREENTRANT
SED = sed
CROSS_TOOL = cross

precompiled : \
  vacall-i386-macro.S \
  vacall-m68k.mit.S vacall-m68k.motorola.S vacall-m68k-netbsd-macro.S \
  vacall-mips-macro.S vacall-mipsn32-macro.S vacall-mips64-macro.S
# Old rules
# vacall-sparc-macro.S vacall-sparc64-macro.S vacall-alpha-macro.S vacall-hppa.s vacall-arm-macro.S vacall-armel-macro.S vacall-powerpc-aix.s vacall-powerpc-sysv4-macro.S vacall-powerpc-macos.s vacall-powerpc64.s vacall-ia64.s vacall-x86_64-macro.S vacall-s390-macro.S


vacall-i386-linux.s : vacall-i386.c vacall_r.h.in $(THISFILE)
	$(CROSS_TOOL) i386-linux gcc -V 3.1 $(GCCFLAGS) -D__i386__ -S vacall-i386.c -o vacall-i386-linux.s

vacall-i386-macro.S : vacall-i386-linux.s ../../common/asm-i386.sh $(THISFILE)
	(echo '#include "asm-i386.h"' ; sed -e '/\.align.*,0x90$$/d' < vacall-i386-linux.s | ../../common/asm-i386.sh | sed -f elfhack-i386.sed) > vacall-i386-macro.S


vacall-m68k-linux.s : vacall-m68k.c vacall_r.h.in $(THISFILE)
	$(CROSS_TOOL) m68k-linux gcc -V 3.1 $(GCCFLAGS) -D__m68k__ -S vacall-m68k.c -o vacall-m68k-linux.s

vacall-m68k-sun.s : vacall-m68k.c vacall_r.h.in $(THISFILE)
	$(CROSS_TOOL) m68k-sun gcc -V 3.1 $(GCCFLAGS) -D__m68k__ -S vacall-m68k.c -o vacall-m68k-sun.s

vacall-m68k.mit.S : vacall-m68k-sun.s ../../common/asm-m68k.sh $(THISFILE)
	(echo '#include "asm-m68k.h"' ; ../../common/asm-m68k.sh mit < vacall-m68k-sun.s | sed -f elfhack-m68k.sed) > vacall-m68k.mit.S

vacall-m68k.motorola.S : vacall-m68k-linux.s ../../common/asm-m68k.sh $(THISFILE)
	(echo '#include "asm-m68k.h"' ; ../../common/asm-m68k.sh motorola < vacall-m68k-linux.s | sed -f elfhack-m68k.sed) > vacall-m68k.motorola.S

vacall-m68k-netbsd-macro.S : vacall-m68k.c vacall_r.h.in ../../common/asm-m68k.sh $(THISFILE)
	$(CROSS_TOOL) m68k-sun gcc -V 3.1 $(GCCFLAGS) -D__m68k__ -D__NetBSD__ -S vacall-m68k.c -o vacall-m68k-netbsd.s
	(echo '#include "asm-m68k.h"' ; ../../common/asm-m68k.sh mit < vacall-m68k-netbsd.s | sed -f elfhack-m68k.sed) > vacall-m68k-netbsd-macro.S
	$(RM) vacall-m68k-netbsd.s


vacall-mips-linux.s : vacall-mips.c vacall_r.h.in $(THISFILE)
	$(CROSS_TOOL) mips64-linux gcc -V 4.0.2 -mabi=32 $(GCCFLAGS) -D__mips__ -S vacall-mips.c -o vacall-mips-linux.s

vacall-mips-macro.S : vacall-mips-linux.s ../../common/asm-mips.sh $(THISFILE)
	(echo '#include "asm-mips.h"' ; ../../common/asm-mips.sh < vacall-mips-linux.s | sed -f elfhack-mips.sed) > vacall-mips-macro.S

vacall-mipsn32-linux.s : vacall-mipsn32.c vacall_r.h.in $(THISFILE)
	$(CROSS_TOOL) mips64-linux gcc -V 4.0.2 -mabi=n32 $(GCCFLAGS) -D__mipsn32__ -S vacall-mipsn32.c -o vacall-mipsn32-linux.s

vacall-mipsn32-macro.S : vacall-mipsn32-linux.s ../../common/asm-mips.sh $(THISFILE)
	$(SED) -e 's/\$$sp,\$$sp,\([-]*\)192/$$sp,$$sp,\1256/' < vacall-mipsn32-linux.s > vacall-mipsn32-linux-hacked.s
	if cmp vacall-mipsn32-linux.s vacall-mipsn32-linux-hacked.s > /dev/null; then echo "Postprocessing hack no longer applies." 1>&2; exit 1; fi
	(echo '#include "asm-mips.h"' ; ../../common/asm-mips.sh < vacall-mipsn32-linux-hacked.s | sed -f elfhack-mips.sed) > vacall-mipsn32-macro.S
	$(RM) vacall-mipsn32-linux-hacked.s

vacall-mips64-linux.s : vacall-mips64.c vacall_r.h.in $(THISFILE)
	$(CROSS_TOOL) mips64-linux gcc -V 4.0.2 -mabi=64 $(GCCFLAGS) -D__mips64__ -S vacall-mips64.c -o vacall-mips64-linux.s

vacall-mips64-macro.S : vacall-mips64-linux.s ../../common/asm-mips.sh $(THISFILE)
	$(SED) -e 's/\$$sp,\$$sp,\([-]*\)224/$$sp,$$sp,\1288/' < vacall-mips64-linux.s > vacall-mips64-linux-hacked.s
	if cmp vacall-mips64-linux.s vacall-mips64-linux-hacked.s > /dev/null; then echo "Postprocessing hack no longer applies." 1>&2; exit 1; fi
	(echo '#include "asm-mips.h"' ; ../../common/asm-mips.sh < vacall-mips64-linux-hacked.s | sed -f elfhack-mips64.sed) > vacall-mips64-macro.S
	$(RM) vacall-mips64-linux-hacked.s


vacall-sparc-macro.S : vacall-sparc.c vacall_r.h.in ../../common/asm-sparc.sh $(THISFILE)
	$(GCC) -V 2.95.2 -b sparc-sun $(GCCFLAGS) -D__sparc__ -S vacall-sparc.c -o vacall-sparc.s
	(echo '#include "asm-sparc.h"' ; ../../common/asm-sparc.sh < vacall-sparc.s) > vacall-sparc-macro.S
	$(RM) vacall-sparc.s

vacall-sparc64-macro.S : vacall-sparc64.c vacall_r.h.in ../../common/asm-sparc64.sh $(THISFILE)
	sparc64-linux-gcc -V 2.95.2 -b sparc64-linux $(GCCFLAGS) -D__sparc64__ -S vacall-sparc64.c -o vacall-sparc64.s
	(echo '#include "asm-sparc.h"' ; ../../common/asm-sparc64.sh < vacall-sparc64.s) > vacall-sparc64-macro.S
	$(RM) vacall-sparc64.s

vacall-alpha-macro.S : vacall-alpha.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 2.7.2 -b alpha-dec-osf $(GCCFLAGS) -D__alpha__ -S vacall-alpha.c -o vacall-alpha-temp.s
	$(SED) -e '/ldgp/d' < vacall-alpha-temp.s | sed -f elfhack-alpha.sed > vacall-alpha-macro.S
	$(RM) vacall-alpha-temp.s

vacall-hppa.s : vacall-hppa.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 2.6.3 -b hppa1.0-hpux $(GCCFLAGS) -D__hppa__ -S vacall-hppa.c -o vacall-hppa.s

vacall-arm-macro.S : vacall-arm.c vacall_r.h.in ../../common/asm-arm.sh $(THISFILE)
	$(GCC) -V 2.6.3 -b arm-acorn-riscix $(GCCFLAGS) -D__arm__ -S vacall-arm.c -o vacall-arm.s
	(echo '#include "asm-arm.h"' ; ../../common/asm-arm.sh < vacall-arm.s | sed -f elfhack-arm.sed) > vacall-arm-macro.S
	$(RM) vacall-arm.s

vacall-armel-macro.S : vacall-armel.c vacall_r.h.in $(THISFILE)
	$(GCC) $(GCCFLAGS) -D__arm__ -D__ARMEL__ -DHAVE_LONG_LONG -fomit-frame-pointer -S vacall-armel.c -o vacall-armel.s
	(echo '#include "asm-arm.h"' ; sed -e 's/^\([A-Za-z0-9_]*:\)/C(\1)/' < vacall-armel.s | sed -f elfhack-arm.sed) > vacall-armel-macro.S
	$(RM) vacall-armel.s

vacall-powerpc-aix.s : vacall-powerpc.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 2.95.2 -b rs6000 -mno-power -mno-power2 -mno-powerpc -mnew-mnemonics $(GCCFLAGS) -D__powerpc__ -S vacall-powerpc.c -o vacall-powerpc-aix.s

vacall-powerpc-linux-macro.S : vacall-powerpc-linux.s $(THISFILE)
	sed -f elfhack-powerpc.sed < vacall-powerpc-linux.s > vacall-powerpc-linux-macro.S

vacall-powerpc-netbsd-macro.S : vacall-powerpc-netbsd.s $(THISFILE)
	sed -f elfhack-powerpc.sed < vacall-powerpc-netbsd.s > vacall-powerpc-netbsd-macro.S

vacall-powerpc-sysv4-macro.S : vacall-powerpc.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 2.95.2 -b ppc-linux -mno-power -mno-power2 -mno-powerpc $(GCCFLAGS) -D__powerpc__ -S vacall-powerpc.c -o vacall-powerpc-sysv4.s
	sed -f elfhack-powerpc.sed < vacall-powerpc-sysv4.s > vacall-powerpc-sysv4-macro.S
	$(RM) vacall-powerpc-sysv4.s

vacall-powerpc-macos.s : vacall-powerpc.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 3.3.2 -b powerpc-darwin $(GCCFLAGS) -D__powerpc__ -S vacall-powerpc.c -o vacall-powerpc-macos.s

vacall-powerpc64.s : vacall-powerpc64.c vacall_r.h.in $(THISFILE)
	/cross/powerpc64-linux-tools/bin/powerpc64-linux-gcc $(GCCFLAGS) -D__powerpc64__ -S vacall-powerpc64.c -o vacall-powerpc64.s

vacall-ia64.s : vacall-ia64.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 2.9-ia64-000216 -b ia64-hp-linux $(GCCFLAGS) -D__ia64__ -S vacall-ia64.c -o vacall-ia64.s

vacall-x86_64-linux.s : vacall-x86_64.c vacall_r.h.in $(THISFILE)
	$(GCC) -V 3.2.2 -b x86_64-suse-linux $(GCCFLAGS) -D__x86_64__ -S vacall-x86_64.c -o vacall-x86_64-linux.s

vacall-x86_64-macro.S : vacall-x86_64-linux.s ../../common/asm-x86_64.sh $(THISFILE)
	(echo '#include "asm-x86_64.h"' ; ../../common/asm-x86_64.sh < vacall-x86_64-linux.s | sed -f elfhack-x86_64.sed) > vacall-x86_64-macro.S

vacall-s390-macro.S : vacall-s390-linux.s $(THISFILE)
	sed -e 's,^#,//,' < vacall-s390-linux.s | sed -f elfhack-s390.sed > vacall-s390-macro.S
