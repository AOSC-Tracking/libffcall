2017-01-29  Bruno Haible  <bruno@clisp.org>

	Fix "Generic workaround against the ELF symbol resolving routine".
	* callback/vacall_r/elfhack-alpha.S: Put env in register $1, not $2.
	* callback/vacall_r/elfhack-alpha.sed: Make it find the correct line.
	* callback/trampoline_r/trampoline.c [__ia64__]: Fix code for
	BINFMT_ELF.
	[__mips64__]: Fix a typo in the trampoline for BINFMT_ELF.
	[__s390__]: Fix typo in is_tramp macro for BINFMT_ELF.

2017-01-10  Bruno Haible  <bruno@clisp.org>

	Update documentation.
	* README: Refer to the git repository, not to the last release.
	* DEPENDENCIES: New file.
	* Makefile.in (SOURCE_FILES): Add it.
	* README-hacking: New file.

2017-01-09  Bruno Haible  <bruno@clisp.org>

	Remove support for m68k/HP-UX, m68k/NeXT, apollo, mips/Ultrix.
	* trampoline/trampoline.c: Remove hpux, NeXT, apollo, ultrix
	conditionals.
	* trampoline/cache.c: Likewise.
	* callback/trampoline_r/trampoline.c: Likewise.

2017-01-09  Bruno Haible  <bruno@clisp.org>

	Remove support for m68k/AmigaOS.
	* avcall/Makefile.devel (avcall-m68k-amiga.s): Remove target.
	* avcall/avcall-m68k-amiga.c: Remove file.
	* avcall/avcall-m68k-amiga.s: Remove file.
	* avcall/Makefile.in (SOURCE_FILES): Remove them.
	* avcall/avcall.h.in: Remove AMIGA conditionals.
	* avcall/tests.c: Likewise.
	* trampoline/trampoline.c: Likewise.
	* callback/trampoline_r/trampoline.c: Likewise.

2017-01-09  Bruno Haible  <bruno@clisp.org>

	Remove support for the AIX 3 operating system.
	* avcall/Makefile.devel (avcall-powerpc-aix.s): Renamed from
	avcall-powerpc-aix.new.s.
	(avcall-powerpc-aix.old.s): Remove target.
	* avcall/avcall-powerpc-aix.s: Renamed from
	avcall/avcall-powerpc-aix.new.s.
	* avcall/avcall-powerpc-aix.old.s: Remove file.
	* avcall/Makefile.in (avcall-powerpc.s): No longer use
	avcall-powerpc-aix.old.s.
	(SOURCE_FILES): Add avcall-powerpc-aix.s. Remove
	avcall-powerpc-aix.new.s, avcall-powerpc-aix.old.s.
	* vacall/Makefile.devel (vacall-powerpc-aix.s): Renamed from
	vacall-powerpc-aix.new.s.
	(vacall-powerpc-aix.old.s): Remove target.
	* vacall/vacall-powerpc-aix.s: Renamed from
	vacall/vacall-powerpc-aix.new.s.
	* vacall/vacall-powerpc-aix.old.s: Remove file.
	* vacall/Makefile.in (vacall-powerpc.s): No longer use
	vacall-powerpc-aix.old.s.
	(SOURCE_FILES): Add vacall-powerpc-aix.s. Remove
	vacall-powerpc-aix.new.s, vacall-powerpc-aix.old.s.
	* callback/vacall_r/Makefile.devel (vacall-powerpc-aix.s): Renamed from
	vacall-powerpc-aix.new.s.
	(vacall-powerpc-aix.old.s): Remove target.
	* callback/vacall_r/vacall-powerpc-aix.s: Renamed from
	callback/vacall_r/vacall-powerpc-aix.new.s.
	* callback/vacall_r/vacall-powerpc-aix.old.s: Remove file.
	* callback/vacall_r/Makefile.in (vacall-powerpc.s): No longer use
	vacall-powerpc-aix.old.s.
	(SOURCE_FILES): Add vacall-powerpc-aix.s. Remove
	vacall-powerpc-aix.new.s, vacall-powerpc-aix.old.s.
	* trampoline/Makefile.devel (proto-powerpc-aix.s): Renamed from
	proto-powerpc-aix.new.s.
	(proto-powerpc-aix.old.s): Remove target.
	* trampoline/proto-powerpc-aix.s: Renamed from 
	trampoline/proto-powerpc-aix.new.s.
	* trampoline/proto-powerpc-aix.old.s: Remove file.
	* trampoline/tramp-powerpc-aix.S: Renamed from
	trampoline/tramp-powerpc.new.S.
	* trampoline/tramp-powerpc.old.S: Remove file.
	* trampoline/tramp-powerpc64-aix.S: Renamed from
	trampoline/tramp-powerpc64.new.S.
	* trampoline/Makefile.in (tramp-powerpc.s): No longer use
	tramp-powerpc.old.S.
	(tramp-powerpc64.s): Update.
	(SOURCE_FILES): Add tramp-powerpc-aix.S, tramp-powerpc64-aix.S. Remove
	tramp-powerpc.old.S, tramp-powerpc.new.S tramp-powerpc64.new.S.
	* callback/trampoline_r/Makefile.devel (proto-powerpc-aix.s): Renamed
	from proto-powerpc-aix.new.s.
	(proto-powerpc-aix.old.s): Remove target.
	* callback/trampoline_r/proto-powerpc-aix.s: Renamed from
	callback/trampoline_r/proto-powerpc-aix.new.s.
	* callback/trampoline_r/proto-powerpc-aix.old.s: Remove file.
	* callback/trampoline_r/tramp-powerpc-aix.S: Renamed from
	callback/trampoline_r/tramp-powerpc.new.S.
	* callback/trampoline_r/tramp-powerpc.old.S: Remove file.
	* callback/trampoline_r/tramp-powerpc64-aix.S: Renamed from
	callback/trampoline_r/tramp-powerpc64.new.S.
	* callback/trampoline_r/Makefile.in (tramp-powerpc.s): No longer use
	tramp-powerpc.old.S.
	(tramp-powerpc64.s): Update.
	(SOURCE_FILES): Add tramp-powerpc-aix.S, tramp-powerpc64-aix.S. Remove
	tramp-powerpc.old.S, tramp-powerpc.new.S tramp-powerpc64.new.S.
	* PLATFORMS, **/PLATFORMS: Update.

2017-01-08  Bruno Haible  <bruno@clisp.org>

	Remove support for the m88k CPU.
	The only place where this CPU is still used is in the OpenBSD 5.8
	luna88k port. The luna88k is museum hardware. They use the ELF binary
	format, through an inofficial port of the 10-years old binutils-2.17.
	* avcall/Makefile.devel (avcall-m88k.s, tests-m88k.s): Remove targets.
	* avcall/avcall-m88k.[cs]: Remove files.
	* avcall/Makefile.in (avcall-m88k.lo): Remove target.
	(SOURCE_FILES): Remove avcall-m88k.[cs].
	* avcall/avcall.h.in: Remove defined(__m88k__) conditionals.
	* vacall/Makefile.devel (vacall-m88k.s, tests-m88k.s): Remove targets.
	* vacall/vacall-m88k.[cs]: Remove files.
	* vacall/Makefile.in (vacall-m88k.o): Remove target.
	(SOURCE_FILES): Remove vacall-m88k.[cs].
	* vacall/vacall.h.in: Remove defined(__m88k__) conditionals.
	* trampoline/Makefile.devel (proto-m88k.s, tramp-m88k.s): Remove targets.
	* trampoline/proto-m88k.s: Remove file.
	* trampoline/tramp-m88k.s: Remove file.
	* trampoline/protexec.c: Remove __DOLPHIN__ conditionals.
	* trampoline/trampoline.c: Remove defined(__m88k__), HAVE_SYS_M88KBCS_H conditionals.
	* trampoline/trampoline.h.in: Don't test for m88k host.
	* trampoline/configure.ac: Don't test for m88k host.
	* callback/vacall_r/Makefile.devel (vacall-m88k.s): Remove target.
	* callback/vacall_r/vacall-m88k.s: Remove file.
	* callback/vacall_r/Makefile.in (vacall-m88k.lo): Remove target.
	(SOURCE_FILES): Remove vacall-m88k.[cs].
	* callback/vacall_r/vacall_r.h.in: Remove defined(__m88k__) conditionals.
	* callback/trampoline_r/Makefile.devel (proto-m88k.s, tramp-m88k.s): Remove targets.
	* callback/trampoline_r/proto-m88k.s: Remove file.
	* callback/trampoline_r/tramp-m88k.s: Remove file.
	* callback/trampoline_r/proto.c: Remove defined(__m88k__) conditional.
	* callback/trampoline_r/trampoline.c: Remove defined(__m88k__), HAVE_SYS_M88KBCS_H conditionals.
	* callback/trampoline_r/trampoline_r.h.in: Don't test for m88k host.
	* callback/trampoline_r/test1.c: Remove defined(__m88k__) conditionals.
	* callback/trampoline_r/configure.ac: Don't test for m88k host.
	* callback/call-used-registers.txt: Update.
	* callback/elf-hack.txt: Update.
	* common/reg-struct-return.txt: Update.
	* PLATFORMS, **/PLATFORMS: Update.
	* README: Update.
	* autogen.sh: Don't copy vacall-m88k.c.
	* Makefile.in (COPIED_FILES): Remove callback/vacall_r/vacall-m88k.c.

2017-01-08  Bruno Haible  <bruno@clisp.org>

	Fix last commit.
	* common/asm-x86_64.sh: Escape '&' characters in replacement string.

2017-01-03  Bruno Haible  <bruno@clisp.org>

	Add support for the Mac OS X 10.5 / x86_64 platform.
	* common/asm-x86_64.sh: Disable the frame info for exception handlers
	on Mac OS X.
	* avcall/avcall-x86_64-macro.S: Regenerated.
	* vacall/vacall-x86_64-macro.S: Likewise.
	* callback/vacall_r/vacall-x86_64-macro.S: Likewise.
	* m4/mmap.m4 (FFCALL_MMAP): Renamed from CL_MMAP. Remove AC_BEFORE
	invocations. Test mmap without MAP_FIXED only. Don't define
	HAVE_MMAP_DEVZERO_SUN4_29.
	* m4/mprotect.m4 (FFCALL_MPROTECT): Renamed from CL_MPROTECT. Update
	dependency.
	* m4/getpagesize.m4 (CL_GETPAGESIZE): Remove AC_BEFORE invocations.
	* m4/general.m4 (FFCALL_COMMON_TRAMPOLINE): Update dependencies.

2017-01-02  Bruno Haible  <bruno@clisp.org>

	Ensure the alignment of trampolines when we use the free-list approach.
	* trampoline/trampoline.c (alloc_trampoline): Consider TRAMP_ALIGN
	when allocating a page of trampolines.
	* callback/trampoline_r/trampoline.c (alloc_trampoline_r): Likewise.

2017-01-02  Bruno Haible  <bruno@clisp.org>

	Fix a build failure on Solaris/SPARC with newer gcc.
	* trampoline/trampoline.c: Remove 'extern inline' declarations.
	* callback/trampoline_r/trampoline.c: Likewise. For SPARC, declare
	__TR_clear_cache_2, not __TR_clear_cache_4.
	* PLATFORMS: Update.
	* avcall/PLATFORMS: Likewise.
	* vacall/PLATFORMS: Likewise.
	* trampoline/PLATFORMS: Likewise.
	* callback/PLATFORMS: Likewise.

2017-01-02  Bruno Haible  <bruno@clisp.org>

	Add support for the Solaris/x86 platform with cc.
	* common/asm-i386.sh: Remove the whitespace in the second argument of
	INSN2MOVX.
	* vacall/vacall-i386-macro.S: Regenerated.
	* callback/vacall_r/vacall-i386-macro.S: Likewise.
	* avcall/Makefile.in (avcall-i386.s): Eliminate ##.
	* vacall/Makefile.in (vacall-i386.s): Likewise.
	* callback/vacall_r/Makefile.in (vacall-i386.s): Likewise.
	* PLATFORMS: Update.
	* avcall/PLATFORMS: Likewise.
	* vacall/PLATFORMS: Likewise.
	* trampoline/PLATFORMS: Likewise.
	* callback/PLATFORMS: Likewise.

2017-01-02  Bruno Haible  <bruno@clisp.org>

	Add support for the Solaris/x86_64 platform.
	* common/asm-x86_64.sh: Introduce ALIGN macro. Disable the frame info
	for exception handlers on Solaris.
	* common/asm-x86_64.h (ALIGN): New macro.
	(FUNEND, EH_FRAME_SECTION): Define differently for Solaris.
	* vacall/Makefile.devel (vacall-x86_64-macro.S): Don't use a #define
	that assumes an ANSI C preprocessor.
	* avcall/avcall-x86_64-macro.S: Regenerated.
	* vacall/vacall-x86_64-macro.S: Likewise.
	* callback/vacall_r/vacall-x86_64-macro.S: Likewise.
	* avcall/Makefile.in (avcall-x86_64.s): Eliminate ##.
	* vacall/Makefile.in (vacall-x86_64.s): Likewise.
	* callback/vacall_r/Makefile.in (vacall-x86_64.s): Likewise.
	* PLATFORMS: Update.
	* avcall/PLATFORMS: Likewise.
	* vacall/PLATFORMS: Likewise.
	* trampoline/PLATFORMS: Likewise.
	* callback/PLATFORMS: Likewise.

2017-01-01  Bruno Haible  <bruno@clisp.org>

	Assume ANSI C in the documentation.
	* vacall/vacall.{3,html}: Use ANSI C declaration syntax. Stop
	mentioning <varargs.h>. Reference stdarg(3).
	* trampoline/trampoline.{3,html}: Reference stdarg(3).
	* callback/callback.{3,html}: Use ANSI C declaration syntax. Stop
	mentioning <varargs.h>.
	* callback/trampoline_r/trampoline_r.{3,html}: Reference stdarg(3).

2017-01-01  Bruno Haible  <bruno@clisp.org>

	Support the CPPFLAGS configure variable.
	* avcall/Makefile.in (CPPFLAGS): New variable.
	Use it in all .c file compilations.
	* vacall/Makefile.in (CPPFLAGS): New variable.
	Use it in all .c file compilations.
	* trampoline/Makefile.in (CPPFLAGS): New variable.
	Use it in all .c file compilations.
	* callback/Makefile.in (CPPFLAGS): New variable.
	Use it in all .c file compilations.
	* callback/vacall_r/Makefile.in (CPPFLAGS): New variable.
	Use it in all .c file compilations.
	* callback/trampoline_r/Makefile.in (CPPFLAGS): New variable.
	Use it in all .c file compilations.

2017-01-01  Bruno Haible  <bruno@clisp.org>

	Add option --disable-elf-hack to disable the ELF workaround.
	* m4/binfmt-elf.m4 (FFCALL_BINFMT_ELF_OPTION): New macro.
	(FFCALL_BINFMT_ELF): Require it. Set BINFMT_ELF to false and define
	BINFMT_ELF to 0 if --disable-elf-hack was specified.
	* configure.ac: Invoke FFCALL_BINFMT_ELF_OPTION.
	* callback/configure.ac: Likewise.
	* callback/elf-hack.txt: Explain how to use --disable-elf-hack for
	testing.

2017-01-01  Bruno Haible  <bruno@clisp.org>

	Generic workaround against the ELF symbol resolving routine.
	Reported for x86_64 by Andrey Kutejko <andy128k@gmail.com>
	at https://savannah.gnu.org/bugs/?32466 .
	* m4/binfmt-elf.m4: New file.
	* Makefile.in (SOURCE_FILES): Add it.
	* callback/elf-hack.txt: New file.
	* callback/test1.c: New file.
	* callback/Makefile.in (SOURCE_FILES): Add both.
	(test1.o, test1): New targets.
	(check): Also run test1.
	(MOSTLYCLEANFILES): Add test1.o, test1.
	* callback/trampoline_r/configure.ac: Invoke FFCALL_BINFMT_ELF.
	* callback/trampoline_r/Makefile.devel: Update the paths to the cross
	assemblers.
	* callback/trampoline_r/tramp-*.s: Add a 'trampelf' function.
	* callback/trampoline_r/tramp-*.S: Likewise.
	* callback/trampoline_r/tramp-*.o: Regenerated.
	* callback/trampoline_r/trampoline.c: Implement alternate trampolines on
	platforms with BINFMT_ELF.
	* callback/trampoline_r/test1.c: Skip the test if BINFMT_ELF.
	* callback/vacall_r/configure.ac: Invoke FFCALL_BINFMT_ELF.
	* callback/vacall_r/elfhack-alpha.S: New file.
	* callback/vacall_r/elfhack-alpha.sed: New file.
	* callback/vacall_r/elfhack-arm.S: New file.
	* callback/vacall_r/elfhack-arm.sed: New file.
	* callback/vacall_r/elfhack-i386.S: New file.
	* callback/vacall_r/elfhack-i386.sed: New file.
	* callback/vacall_r/elfhack-m68k.S: New file.
	* callback/vacall_r/elfhack-m68k.sed: New file.
	* callback/vacall_r/elfhack-mips.S: New file.
	* callback/vacall_r/elfhack-mips.sed: New file.
	* callback/vacall_r/elfhack-mips64.S: New file.
	* callback/vacall_r/elfhack-mips64.sed: New file.
	* callback/vacall_r/elfhack-powerpc.S: New file.
	* callback/vacall_r/elfhack-powerpc.sed: New file.
	* callback/vacall_r/elfhack-powerpc64le.S: New file.
	* callback/vacall_r/elfhack-powerpc64le.sed: New file.
	* callback/vacall_r/elfhack-s390.S: New file.
	* callback/vacall_r/elfhack-s390.sed: New file.
	* callback/vacall_r/elfhack-x86_64.S: New file.
	* callback/vacall_r/elfhack-x86_64.sed: New file.
	* callback/vacall_r/Makefile.devel (vacall-i386-macro.S): Insert an
	include of elfhack-i386.S.
	(vacall-m68k.mit.S, vacall-m68k-netbsd-macro.S): Insert an include of
	elfhack-m68k.S.
	(vacall-mips-macro.S, vacall-mipsn32-macro.S): Insert an include of
	elfhack-mips.S.
	(vacall-mips64-macro.S): Insert an include of elfhack-mips64.S.
	(vacall-alpha-macro.S): Renamed from vacall-alpha.s. Insert an include
	of elfhack-alpha.S.
	(vacall-arm-macro.S): Insert an include of elfhack-arm.S.
	(vacall-armel-macro.S): Renamed from vacall-armel.s. Insert an include
	of asm-arm.h and elfhack-arm.S.
	(vacall-powerpc-linux-macro.S, vacall-powerpc-netbsd-macro.S): New
	targets.
	(vacall-powerpc-sysv4-macro.S): Renamed from vacall-powerpc-sysv4.s.
	Insert an include of elfhack-powerpc.S.
	(vacall-powerpc64le-macro.S): Renamed from vacall-powerpc64le.s. Insert
	an include of elfhack-powerpc64.S.
	(vacall-x86_64-macro.S): Insert an include of elfhack-x86_64.S.
	(vacall-s390-macro.S): New target.
	* callback/vacall_r/vacall-alpha-macro.S: Renamed from
	callback/vacall_r/vacall-alpha.s. Include elfhack-alpha.S.
	* callback/vacall_r/vacall-arm-macro.S: Include elfhack-arm.S.
	* callback/vacall_r/vacall-armel-macro.S: Renamed from
	callback/vacall_r/vacall-armel.s. Include asm-arm.h and elfhack-arm.S.
	* callback/vacall_r/vacall-i386-macro.S: Include elfhack-i386.S.
	* callback/vacall_r/vacall-m68k.mit.S: Include elfhack-m68k.S.
	* callback/vacall_r/vacall-m68k-netbsd-macro.S: Likewise.
	* callback/vacall_r/vacall-mips-macro.S: Include elfhack-mips.S.
	* callback/vacall_r/vacall-mipsn32-macro.S: Likewise.
	* callback/vacall_r/vacall-mips64-macro.S: Include elfhack-mips64.S.
	* callback/vacall_r/vacall-powerpc-linux-macro.S: Generated, to include
	elfhack-powerpc.S.
	* callback/vacall_r/vacall-powerpc-netbsd-macro.S: Generated, to include
	elfhack-powerpc.S.
	* callback/vacall_r/vacall-powerpc-sysv4-macro.S: Renamed from
	callback/vacall_r/vacall-powerpc-sysv4.s. Include elfhack-powerpc.S.
	* callback/vacall_r/vacall-powerpc64le-macro.S: Renamed from
	callback/vacall_r/vacall-powerpc64le.s. Include elfhack-powerpc64le.S.
	* callback/vacall_r/vacall-s390-linux.s: Renamed from
	callback/vacall_r/vacall-s390.s.
	* callback/vacall_r/vacall-s390-macro.S: Generated, to include
	elfhack-s390.S.
	* callback/vacall_r/vacall-x86_64-macro.S: Include elfhack-x86_64.S.
	* callback/vacall_r/Makefile.in (ASPFLAGS): Conditionally define
	BINFMT_ELF.
	(vacall-i386.s, vacall-m68k.s, vacall-mips.s, vacall-mipsn32.s,
	vacall-mips64.s): Add a -I option for elfhack-*.S.
	(vacall-alpha.s): New target.
	(vacall-alpha.lo): Depend on it.
	(vacall-arm.s): Add a -I option for elfhack-*.S.
	(vacall-armel.s): New target.
	(vacall-armel.lo): Depend on it.
	(vacall-powerpc.s): For the linux, netbsd, sysv4 syntaxes, use the
	corresponding *.S file.
	(vacall-powerpc64le.s): New target.
	(vacall-powerpc64le.lo): Depend on it.
	(vacall-x86_64.s): Add a -I option for elfhack-*.S.
	(vacall-s390.s): New target.
	(vacall-s390.lo): Depend on it.
	(clean): Remove also vacall-alpha.s, vacall-armel.s,
	vacall-powerpc64le.s, vacall-s390.s.
	(SOURCE_FILES): Update for the renamed files. Add
	vacall-powerpc-linux-macro.S, vacall-powerpc-netbsd-macro.S,
	vacall-s390-macro.S, elfhack-*.S, elfhack-*.sed.
	* README: Clarify on which platforms the problem with the ELF symbol
	resolving routine still exists.

2016-12-31  Bruno Haible  <bruno@clisp.org>

	Update doc about available registers.
	* callback/call-used-registers.txt: Clarify call-used registers versus
	registers available for use in trampolines.
	* trampoline/tramp-powerpc-old.s: Mark as obsolete.
	* callback/trampoline_r/tramp-powerpc-old.s: Likewise.
	* trampoline/tramp-x86_64.s: Fix comment about available registers.
	* callback/trampoline_r/tramp-x86_64.s: Likewise.
	* trampoline/tramp-powerpc-sysv4.s: Likewise.
	* callback/trampoline_r/tramp-powerpc-sysv4.s: Likewise.
	* trampoline/tramp-*.s: Update comment about available registers.
	* trampoline/tramp-*.S: Likewise.
	* callback/trampoline_r/tramp-*.s: Likewise.
	* callback/trampoline_r/tramp-*.S: Likewise.

2016-12-31  Bruno Haible  <bruno@clisp.org>

	Simplify powerpc compilation rules.
	* avcall/Makefile.in (avcall-powerpc.s): New rule.
	(avcall-powerpc.lo): Depend on it. Remove libtool specific workaround.
	(clean): Remove also avcall-powerpc.s.
	* vacall/Makefile.in (vacall-powerpc.s): New rule.
	(vacall-powerpc.o): Depend on it.
	(clean): Remove also vacall-powerpc.s.
	* callback/vacall_r/Makefile.in (vacall-powerpc.s): New rule.
	(vacall-powerpc.lo): Depend on it. Remove libtool specific workaround.
	(clean): Remove also vacall-powerpc.s.

2016-12-29  Bruno Haible  <bruno@clisp.org>

	Revert "Pass the environment argument through the stack, not in a
	register." commit from 1999-06-01.
	* vacall/vacall-i386.c: Revert: Allow use of registers %esi, %edi, %ebp.
	Expect env in %ecx, not as first stack argument.
	* vacall/vacall-i386-macro.S: Revert.
	* callback/vacall_r/vacall-i386-macro.S: Revert.
	* callback/trampoline_r/proto.c (tramp2): Remove function.
	* callback/trampoline_r/proto-i386.s: Revert accordingly.
	* callback/trampoline_r/tramp-i386.s: Put the data in %ecx, not as
	first stack argument.
	* callback/trampoline_r/trampoline.c [i386]: Revert to simple
	trampoline.
	* callback/trampoline_r/test1.c (f) [i386]: Expect env in %ecx, not as
	first stack argument.

2016-12-29  Bruno Haible  <bruno@clisp.org>

	Revert "Never build shared libraries: --enable-shared has no effect."
	commit from 2012-04-24.
	* README: Revert, but still recommend --disable-shared.
	* avcall/Makefile.in (libavcall.la): Don't pass -static to libtool.
	* callback/Makefile.in (libcallback.la): Likewise.
	* callback/vacall_r/Makefile.in (libvacall.la): Likewise.
	* callback/trampoline_r/Makefile.in (libtrampoline.la): Likewise.

2016-12-30  Bruno Haible  <bruno@clisp.org>

	Rename text files.
	* common/reg-struct-return.txt: Renamed from common/reg-struct-return.
	* callback/call-used-registers.txt: Renamed from
	callback/call-used-registers.
	* trampoline/PORTING: Update.
	* callback/README: Likewise.

2016-12-29  Bruno Haible  <bruno@clisp.org>

	Update documentation about register usage.
	* callback/call-used-registers: Update regarding powerpc/NetBSD.

2016-12-29  Bruno Haible  <bruno@clisp.org>

	Remove support for the 'convex' CPU.
	* avcall/Makefile.devel (avcall-convex.s, tests-convex.s): Remove
	targets.
	* avcall/avcall-convex.[cs]: Remove files.
	* avcall/Makefile.in (avcall-convex.lo): Remove target.
	(SOURCE_FILES): Remove avcall-convex.[cs].
	* avcall/avcall.h.in: Remove defined(__convex__) conditionals.
	* vacall/Makefile.devel (vacall-convex.s, tests-convex.s): Remove
	targets.
	* vacall/vacall-convex.[cs]: Remove files.
	* vacall/Makefile.in (vacall-convex.o): Remove target.
	(SOURCE_FILES): Remove vacall-convex.[cs].
	* vacall/vacall.h.in: Remove defined(__convex__) conditionals.
	* trampoline/Makefile.devel (proto-convex.s, cache-convex.s,
	tramp-convex.s): Remove targets.
	* trampoline/proto-convex.s: Remove file.
	* trampoline/cache-convex.[cs]: Remove files.
	* trampoline/tramp-convex.s: Remove file.
	* trampoline/Makefile.in (cache-convex.o): Remove target.
	(SOURCE_FILES): Remove cache-convex.[cs].
	* trampoline/cache.c: Remove defined(__convex__) conditionals.
	* trampoline/protexec.c: Remove defined(__convex__) conditionals.
	* trampoline/trampoline.c: Remove defined(__convex__) conditionals.
	* trampoline/trampoline.h.in: Don't test for convex host.
	* trampoline/configure.ac: Don't test for convex host.
	* callback/vacall_r/Makefile.devel (vacall-convex.s): Remove target.
	* callback/vacall_r/vacall-convex.s: Remove file.
	* callback/vacall_r/Makefile.in (vacall-convex.lo): Remove target.
	(SOURCE_FILES): Remove vacall-convex.[cs].
	* callback/vacall_r/vacall_r.h.in: Remove defined(__convex__)
	conditionals.
	* callback/trampoline_r/Makefile.devel (proto-convex.s, cache-convex.s,
	tramp-convex.s): Remove targets.
	* callback/trampoline_r/proto-convex.s: Remove file.
	* callback/trampoline_r/tramp-convex.s: Remove file.
	* callback/trampoline_r/Makefile.in (cache-convex.lo): Remove target.
	(SOURCE_FILES): Remove cache-convex.[cs].
	* callback/trampoline_r/proto.c: Remove defined(__convex__)
	conditionals.
	* callback/trampoline_r/trampoline.c: Remove defined(__convex__)
	conditionals.
	* callback/trampoline_r/trampoline_r.h.in: Don't test for convex host.
	* callback/trampoline_r/test1.c: Remove defined(__convex__)
	conditionals.
	* callback/trampoline_r/configure.ac: Don't test for convex host.
	* callback/call-used-registers: Update.
	* common/reg-struct-return: Update.
	* PLATFORMS, **/PLATFORMS: Update.
	* autogen.sh: Don't copy vacall-convex.c, cache-convex.[cs].
	* Makefile.in (COPIED_FILES): Remove callback/vacall_r/vacall-convex.c,
	callback/trampoline_r/cache-convex.[cs].

2016-12-29  Bruno Haible  <bruno@clisp.org>

	Fix collision between different copies of __structcpy.
	Reported in http://savannah.gnu.org/bugs/?23474 .
	* avcall/avcall-structcpy.c: New file.
	* avcall/Makefile.in (avcall-structcpy.lo): Renamed from structcpy.lo.
	(SOURCE_FILES): Add avcall-structcpy.c.
	* avcall/Makefile.mingw32 (avcall-structcpy.o): Renamed from
	structcpy.o.
	* avcall/Makefile.msvc (avcall-structcpy.obj): Renamed from
	structcpy.obj.
	* avcall/avcall.h.in: Declare and use avcall_structcpy instead of
	__structcpy.
	* avcall/README: Update.
	* vacall/vacall-structcpy.c: New file.
	* vacall/Makefile.in (vacall-structcpy.o): Renamed from structcpy.o.
	(SOURCE_FILES): Add vacall-structcpy.c.
	* vacall/Makefile.mingw32 (vacall-structcpy.o): Renamed from
	structcpy.o.
	* vacall/Makefile.msvc (vacall-structcpy.obj): Renamed from
	structcpy.obj.
	* vacall/vacall.h.in: Declare and use vacall_structcpy instead of
	__structcpy.
	* callback/vacall_r/vacall-structcpy.c: New file.
	* callback/vacall_r/Makefile.in (vacall-structcpy.lo): Renamed from
	structcpy.lo.
	(SOURCE_FILES): Add vacall-structcpy.c.
	* callback/vacall_r/Makefile.mingw32 (vacall-structcpy.o): Renamed from
	structcpy.o.
	* callback/vacall_r/Makefile.msvc (vacall-structcpy.obj): Renamed from
	structcpy.obj.
	* callback/vacall_r/vacall_r.h.in: Declare and use callback_structcpy
	instead of __structcpy.
	* callback/Makefile.in (libcallback.la): Use vacall-structcpy.lo, not
	structcpy.lo.
	* callback/Makefile.mingw32 (OBJECTS): Use vacall-structcpy.o, not
	structcpy.o.
	* callback/Makefile.msvc (OBJECTS): Use vacall-structcpy.obj, not
	structcpy.obj.
	(vacall_r/vacall-structcpy.obj): Renamed from vacall_r/structcpy.obj.
	(clean): Update accordingly.

2016-12-29  Bruno Haible  <bruno@clisp.org>

	Put duplicated files under version control only once, part 2.
	* vacall/vacall-powerpc.c: Update with the 'REENTRANT' code from
	callback/vacall_r/.
	* vacall/vacall-s390.c: Likewise.
	* callback/vacall_r/vacall-alpha.c: Remove file.
	* callback/vacall_r/vacall-arm.c: Remove file.
	* callback/vacall_r/vacall-armel.c: Remove file.
	* callback/vacall_r/vacall-convex.c: Remove file.
	* callback/vacall_r/vacall-hppa.c: Remove file.
	* callback/vacall_r/vacall-i386.c: Remove file.
	* callback/vacall_r/vacall-ia64.c: Remove file.
	* callback/vacall_r/vacall-m68k.c: Remove file.
	* callback/vacall_r/vacall-m88k.c: Remove file.
	* callback/vacall_r/vacall-mips.c: Remove file.
	* callback/vacall_r/vacall-mipsn32.c: Remove file.
	* callback/vacall_r/vacall-mips64.c: Remove file.
	* callback/vacall_r/vacall-powerpc.c: Remove file.
	* callback/vacall_r/vacall-powerpc64.c: Remove file.
	* callback/vacall_r/vacall-powerpc64le.c: Remove file.
	* callback/vacall_r/vacall-s390.c: Remove file.
	* callback/vacall_r/vacall-sparc.c: Remove file.
	* callback/vacall_r/vacall-sparc64.c: Remove file.
	* callback/vacall_r/vacall-x86_64.c: Remove file.
	* autogen.sh: Copy these files from vacall/.
	* Makefile.in (COPIED_FILES): Add these files.

2016-12-28  Bruno Haible  <bruno@clisp.org>

	More robust quoting in Autoconf macros.
	* configure.ac: Add brackets around Autoconf macro arguments.
	* avcall/configure.ac: Likewise.
	* vacall/configure.ac: Likewise.
	* trampoline/configure.ac: Likewise.
	* callback/configure.ac: Likewise.
	* callback/vacall_r/configure.ac: Likewise.
	* callback/trampoline_r/configure.ac: Likewise.
	* m4/as-underscore.m4: Likewise.
	* m4/cc-gcc.m4: Likewise.
	* m4/codeexec.m4: Likewise.
	* m4/general.m4: Likewise.
	* m4/getpagesize.m4: Likewise.
	* m4/ireg.m4: Likewise.
	* m4/ln.m4: Likewise.
	* m4/mach-vm.m4: Likewise.
	* m4/mmap.m4: Likewise.
	* m4/mprotect.m4: Likewise.
	* m4/pccstruct.m4: Likewise.
	* m4/proto.m4: Likewise.
	* m4/shm.m4: Likewise.
	* m4/smallstruct.m4: Likewise.

2016-12-28  Bruno Haible  <bruno@clisp.org>

	Update list of contributors.
	* README: List all contributors.

2016-12-28  Bruno Haible  <bruno@clisp.org>

	Add support for 64-bit mode (x86_64) on Mac OS X.
	* common/asm-x86_64.sh: New file.
	* common/asm-x86_64.h: New file.
	* Makefile.in (SOURCE_FILES): Add them.
	* avcall/avcall-x86_64-linux.s: Renamed from avcall/avcall-x86_64.s.
	* avcall/Makefile.devel (avcall-x86_64-linux.s): Renamed from avcall-x86_64.s.
	(avcall-x86_64-macro.S): New target.
	* avcall/avcall-x86_64-macro.S: New file, generated through avcall/Makefile.devel.
	* avcall/Makefile.in (avcall-x86_64.s): New target.
	(avcall-x86_64.lo): Use it, in the build dir.
	(clean): Remove it.
	(SOURCE_FILES): Add avcall-x86_64-linux.s, avcall-x86_64-macro.S. Remove avcall-x86_64.s.
	* vacall/vacall-x86_64-linux.s: Renamed from vacall/vacall-x86_64.s.
	* vacall/Makefile.devel (vacall-x86_64-linux.s): Renamed from vacall-x86_64.s.
	(vacall-x86_64-macro.S): New target.
	* vacall/vacall-x86_64-macro.S: New file, generated through vacall/Makefile.devel.
	* vacall/Makefile.in (vacall-x86_64.s): New target.
	(vacall-x86_64.o): Use it, in the build dir.
	(clean): Remove it.
	(SOURCE_FILES): Add vacall-x86_64-linux.s, vacall-x86_64-macro.S. Remove vacall-x86_64.s.
	* callback/vacall_r/vacall-x86_64-linux.s: Renamed from callback/vacall_r/vacall-x86_64.s.
	* callback/vacall_r/Makefile.devel (vacall-x86_64-linux.s): Renamed from vacall-x86_64.s.
	(vacall-x86_64-macro.S): New target.
	* callback/vacall_r/vacall-x86_64-macro.S: New file, generated through callback/vacall_r/Makefile.devel.
	* callback/vacall_r/Makefile.in (vacall-x86_64.s): New target.
	(vacall-x86_64.lo): Use it, in the build dir.
	(clean): Remove it.
	(SOURCE_FILES): Add vacall-x86_64-linux.s, vacall-x86_64-macro.S. Remove vacall-x86_64.s.
	* callback/trampoline_r/test1.c (CHECK_ENV_REGISTER): New macro.
	(f, main): Use it instead of __GNUC__.
	* NEWS: Mention the change.

2016-12-28  Bruno Haible  <bruno@clisp.org>

	Rename the asm* files.
	* common/asm-arm.h: Renamed from common/asmarm.h.
	* common/asm-arm.sh: Renamed from common/asmarm.sh.
	* common/asm-i386.hh: Renamed from common/asmi386.hh.
	* common/asm-i386.sh: Renamed from common/asmi386.sh.
	* common/asm-m68k.h: Renamed from common/asmm68k.h.
	* common/asm-m68k.sh: Renamed from common/asmm68k.sh.
	* common/asm-mips.h: Renamed from common/asmmips.h.
	* common/asm-mips.sh: Renamed from common/asmmips.sh.
	* common/asm-sparc.h: Renamed from common/asmsparc.h.
	* common/asm-sparc.sh: Renamed from common/asmsparc.sh.
	* common/asm-sparc64.sh: Renamed from common/asmsparc64.sh.
	* **/Makefile.devel, **/*.S: Update.
	* Makefile.maint (common/asm-i386.h): Renamed from common/asmi386.h.
	* Makefile.in (SOURCE_FILES, GENERATED_FILES): Update.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Add the real source of asmi386.h.
	* common/asmi386.hh: New file, from GNU clisp.
	* common/asmi386.h: Remove file.
	* Makefile.maint (common/asmi386.h): New target. Rule copied from
	GNU clisp's Makefile.devel.
	(all): Depend on it.
	* Makefile.in (SOURCE_FILES): Add common/asmi386.hh. Remove
	common/asmi386.h.
	(GENERATED_FILES): Add common/asmi386.h.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Modernize Cygwin detection.
	* common/asmi386.h: Test __CYGWIN__, not __CYGWIN32__.
	From Ken Brown <kbrown@cornell.edu> on 2015-03-05.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Create tarballs through an Automake-like "make dist" command.
	* Makefile.in (SOURCE_FILES, LIBTOOL_IMPORTED_FILES,
	GNULIB_IMPORTED_FILES, IMPORTED_FILES, COPIED_FILES, GENERATED_FILES,
	DISTFILES): New macros.
	(distdir): New target.
	(PACKAGE, VERSION, TAR, GZIP): New macros.
	(dist): New target.
	* avcall/Makefile.in (SOURCE_FILES, GENERATED_FILES, DISTFILES): New
	macros.
	(distdir): New target.
	* vacall/Makefile.in (SOURCE_FILES, GENERATED_FILES, DISTFILES): New
	macros.
	(distdir): New target.
	* trampoline/Makefile.in (SOURCE_FILES, GENERATED_FILES, DISTFILES):
	New macros.
	(distdir): New target.
	* callback/Makefile.in (SOURCE_FILES, GENERATED_FILES, DISTFILES): New
	macros.
	(distdir): New target.
	* callback/vacall_r/Makefile.in (SOURCE_FILES, GENERATED_FILES,
	DISTFILES): New macros.
	(distdir): New target.
	* callback/trampoline_r/Makefile.in (SOURCE_FILES, GENERATED_FILES,
	DISTFILES): New macros.
	(distdir): New target.
	* configure.ac (extrasub): Replace all occurrences of @subdir@.
	* callback/configure.ac (extrasub): Likewise.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Bump version number.
	* VERSION: Set to 0x010D (= 1.13).

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Rename each configure.in to configure.ac.
	* configure.ac: Renamed from configure.in.
	* avcall/configure.ac: Renamed from avcall/configure.in.
	* vacall/configure.ac: Renamed from vacall/configure.in.
	* trampoline/configure.ac: Renamed from trampoline/configure.in.
	* callback/configure.ac: Renamed from callback/configure.in.
	* callback/vacall_r/configure.ac: Renamed from
	callback/vacall_r/configure.in.
	* callback/trampoline_r/configure.ac: Renamed from
	callback/trampoline_r/configure.in.
	* Makefile.maint (ALL_CONFIGURE_AC): Renamed from ALL_CONFIGURE_IN.
	(aclocal.m4, configure, %/configure, %/config.h.in): Update.
	* README, */README: Update.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Modernize quoting.
	* NEWS: Quote ‘like this’, not `like this'.
	* README.os2: Likewise.
	* common/uniq-u.c: Likewise.
	* avcall/DOC: Likewise.
	* avcall/avcall-i386.c: Likewise.
	* avcall/avcall-sparc.c: Likewise.
	* avcall/avcall-sparc64.c: Likewise.
	* avcall/avcall.h.in: Likewise.
	* avcall/avcall.html: Likewise.
	* vacall/vacall.h.in: Likewise.
	* callback/trampoline_r/trampoline.c: Likewise.
	* callback/trampoline_r/trampoline_r.h.in: Likewise.
	* trampoline/PORTING: Likewise.
	* trampoline/trampoline.c: Likewise.
	* trampoline/trampoline.h.in: Likewise.
	* callback/vacall_r/vacall_r.h.in: Likewise.
	* configurations/README: Likewise.
	* avcall/Makefile.maint (ROFF_MAN): Produce UTF-8 output instead of
	ASCII output.
	* vacall/Makefile.maint (ROFF_MAN): Likewise.
	* trampoline/Makefile.maint (ROFF_MAN): Likewise.
	* callback/Makefile.maint (ROFF_MAN): Likewise.
	* callback/trampoline_r/Makefile.maint (ROFF_MAN): Likewise.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Avoid unnecessary recursion in "make maintainer-clean".
	* Makefile.in (DISTCLEANFILES): New variable.
	(distclean, maintainer-clean): Use it.
	* callback/Makefile.in (DISTCLEANFILES): New variable.
	(distclean): Use it. Don't depend on 'clean'. Instead, use
	MOSTLYCLEANDIRS, MOSTLYCLEANFILES.
	(maintainer-clean): Don't depend on 'distclean'. Instead, use
	MOSTLYCLEANDIRS, MOSTLYCLEANFILES, DISTCLEANFILES.
	(distclean-subdirs, maintainerclean-subdirs): Inline and remove targets.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Make "make mostlyclean" act like "make clean".
	* callback/Makefile.in (MOSTLYCLEANDIRS, MOSTLYCLEANFILES): New
	variables.
	(mostlyclean, clean): Use them.
	(clean-subdirs): Inline and remove target.

2016-12-27  Bruno Haible  <bruno@clisp.org>

	Fix Makefile rules for powerpc64, from 2006-04-27.
	* trampoline/Makefile.in (clean): Also remove tramp-powerpc64.s.
	* callback/trampoline_r/Makefile.in (clean): Likewise.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Reorder Makefile targets.
	* trampoline/Makefile.in: Reorder.
	* callback/trampoline_r/Makefile.in: Reorder.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Fix Makefile rules for powerpc64le, from 2015-08-23.
	* trampoline/Makefile.devel (CPP): New variable.
	(tramp-powerpc64le.o, tramp-powerpc64le.s): New targets.
	* trampoline/Makefile.in (tramp-powerpc64le.o, tramp-powerpc64le.s):
	Remove targets.
	* callback/trampoline_r/Makefile.devel (CPP): New variable.
	(tramp-powerpc64le.o, tramp-powerpc64le.s): New targets.
	* callback/trampoline_r/Makefile.in (tramp-powerpc64le.lo,
	tramp-powerpc64le.s): Remove targets.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Fix Makefile rules for s390, from 2002-03-24.
	* trampoline/Makefile.devel (tramp-s390.o): New target.
	* trampoline/Makefile.in (tramp-s390.o): Remove target.
	* callback/trampoline_r/Makefile.devel (tramp-s390.o): New target.
	* callback/trampoline_r/Makefile.in (tramp-s390.lo): Remove target.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Fix "make distclean".
	* avcall/Makefile.in (distclean): Also remove config.h.
	* callback/Makefile.in (distclean): Likewise.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Make it possible to build in $(srcdir) on case-insensitive file systems.
	* avcall/avcall-${cpu}-macro.S: Renamed from avcall/avcall-${cpu}.S.
	* avcall/Makefile.devel: Update accordingly.
	* avcall/Makefile.in: Likewise.
	* vacall/vacall-${cpu}-macro.S: Renamed from vacall/vacall-${cpu}.S.
	* vacall/Makefile.devel: Update accordingly.
	* vacall/Makefile.in: Likewise.
	* trampoline/cache-sparc-macro.S: Renamed from trampoline/cache-sparc.S.
	* trampoline/Makefile.devel: Update accordingly.
	* trampoline/Makefile.in: Update accordingly.
	* callback/vacall_r/vacall-${cpu}-macro.S: Renamed from
	callback/vacall_r/vacall-${cpu}.S.
	* callback/vacall_r/Makefile.devel: Update accordingly.
	* callback/vacall_r/Makefile.in: Likewise.
	* callback/trampoline_r/cache-sparc-macro.S: Renamed from
	callback/trampoline_r/cache-sparc.S.
	* callback/trampoline_r/Makefile.devel: Update accordingly.
	* callback/trampoline_r/Makefile.in: Update accordingly.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Simplify armel build rule.
	* avcall/Makefile.devel (avcall-armel.s): Renamed from avcall-armel.S.
	Simplify.
	* avcall/Makefile.in (avcall-armel.lo): Use $(srcdir)/avcall-armel.s.
	(avcall-armel.s): Remove target.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Put duplicated files under version control only once.
	* autogen.sh: Copy some files from trampoline/ to callback/trampoline_r.
	* common/asm*.sh: Moved here from avcall/, vacall/, callback/vacall_r.
	* common/asm*.h: Likewise.
	* common/reg-struct-return: Likewise.
	* common/structcpy.c: Likewise.
	* common/uniq-u.c: Moved here from avcall/, vacall/, callback/.
	* avcall/Makefile.devel: Update paths of asm*.sh.
	* avcall/Makefile.in: Add -I options for asm*.h. Update path of structcpy.c.
	* avcall/Makefile.mingw32: Likewise.
	* avcall/Makefile.msvc: Likewise. Update path of uniq-u.c.
	* vacall/Makefile.devel: Update paths of asm*.sh.
	* vacall/Makefile.in: Add -I options for asm*.h. Update path of structcpy.c.
	* vacall/Makefile.mingw32: Likewise.
	* vacall/Makefile.msvc: Likewise. Update path of uniq-u.c.
	* trampoline/Makefile.devel: Update paths of asm*.sh.
	* trampoline/Makefile.in: Add -I options for asm*.h.
	* callback/Makefile.msvc: Update path of uniq-u.c.
	* callback/vacall_r/Makefile.devel: Update paths of asm*.sh.
	* callback/vacall_r/Makefile.in: Add -I options for asm*.h. Update path of structcpy.c.
	* callback/vacall_r/Makefile.mingw32: Likewise.
	* callback/vacall_r/Makefile.msvc: Likewise.
	* callback/trampoline_r/Makefile.devel: Update paths of asm*.sh.
	* callback/trampoline_r/Makefile.in: Add -I options for asm*.h.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Fix dependencies.
	* avcall/Makefile.devel (avcall-sparc64.S): Depend on asmsparc64.sh,
	not asmsparc.sh.
	* vacall/Makefile.devel (vacall-sparc64.S): Likewise.
	* callback/vacall_r/Makefile.devel (vacall-sparc64.S): Likewise.
	* callback/Makefile.maint (vacall_r/vacall-i386-*.c): Don't depend on
	vacall_r/asmi386.sh.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Add missing dependency.
	* callback/vacall_r/Makefile.devel (vacall-m68k-netbsd.S): Depend on
	asmm68k.sh.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Switch to libtool-2.4.6.
	* autogen.sh (LIBTOOL_VERSION): Set to 2.4.6.
	* Makefile.maint (libtool-imported-files): Import also m4/ltoptions.m4,
	m4/ltsugar.m4, m4/ltversion.m4, m4/lt~obsolete.m4.
	* m4/general.m4 (FFCALL_COMMON_LIBTOOL): Invoke LT_INIT.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Switch to autoconf 2.69 and automake 1.15.
	* Makefile.maint (ACLOCAL, AUTOCONF, AUTOHEADER): Bump version numbers.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Remove files that can easily be autogenerated from version control.
	* autogen.sh: New file.
	* Makefile.maint: New file, partially inspired by Makefile.devel.
	* Makefile.devel (all): Remove target and its subtargets.
	* avcall/Makefile.maint: New file, extracted from avcall/Makefile.devel.
	* avcall/Makefile.devel (precompiled): Renamed from 'all'.
	Remove all targets that are moved to avcall/Makefile.maint.
	* vacall/Makefile.maint: New file, extracted from vacall/Makefile.devel.
	* vacall/Makefile.devel (precompiled): Renamed from 'all'.
	Remove all targets that are moved to vacall/Makefile.maint.
	* trampoline/Makefile.maint: New file, extracted from
	trampoline/Makefile.devel.
	* trampoline/Makefile.devel (precompiled): Renamed from 'all'.
	Remove all targets that are moved to trampoline/Makefile.maint.
	* callback/Makefile.maint: Renamed from callback/Makefile.devel.
	(trampoline_r/trampoline_r.man): New target.
	(totally-clean, force): New targets.
	* callback/vacall_r/Makefile.maint: New file, extracted from
	callback/vacall_r/Makefile.devel.
	* callback/vacall_r/Makefile.devel (precompiled): Renamed from 'all'.
	Remove all targets that are moved to callback/vacall_r/Makefile.maint.
	(vacall_r.man): Remove target.
	* callback/trampoline_r/Makefile.maint: New file, extracted from
	callback/trampoline_r/Makefile.devel.
	* callback/trampoline_r/Makefile.devel (precompiled): Renamed from
	'all'.
	Remove all targets that are moved to
	callback/trampoline_r/Makefile.maint.

2016-12-26  Bruno Haible  <bruno@clisp.org>

	Remove test result files from version control.
	* callback/trampoline_r/tests.passed.i386-pc-win32-gcc: Remove file.

2015-08-23  Hernán Erasmo  <dherasmo@gmail.com>

	Added compatibility with ppc64le architecture. Credit goes
	to Masanori Mitsugi <mitsugi@linux.vnet.ibm.com>

2012-04-24  Sam Steingold  <sds@gnu.org>

	Never build shared libraries: --enable-shared has no effect.
	* avcall/Makefile.in (libavcall.la): pass -static to LIBTOOL_LINK
	* callback/Makefile.in (libcallback.la): ditto
	* callback/trampoline_r/Makefile.in (libtrampoline.la): ditto
	* callback/vacall_r/Makefile.in (libvacall.la): ditto

2010-09-03  Sam Steingold  <sds@gnu.org>

	* configure.in: call AC_CONFIG_AUX_DIR(build-aux)

2010-09-03  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (gnulib-imported): also import host-cpu-c-abi
	* avcall/configure.in, callback/configure.in:
	* callback/trampoline_r/configure.in, callback/vacall_r/configure.in:
	* trampoline/configure.in, vacall/configure.in:
	use gl_HOST_CPU_C_ABI instead of FFCALL_CANONICAL_HOST_CPU
	* m4/general.m4: remove FFCALL_CANONICAL_HOST_CPU,
	FFCALL_CACHE_EGREP_CPP, FFCALL_SET_CPU_ABI
	* glm4/host-cpu-c-abi.m4: add
	* avcall/Makefile.in, callback/Makefile.in:
	* callback/trampoline_r/Makefile.in, callback/vacall_r/Makefile.in:
	* trampoline/Makefile.in, vacall/Makefile.in,
	use @HOST_CPU_C_ABI@ instead of @host_cpu_abi@
	* callback/trampoline_r/configure.in, trampoline/configure.in:
	* m4/codeexec.m4: use $HOST_CPU_C_ABI instead of $host_cpu_abi

2010-07-20  Sam Steingold  <sds@gnu.org>

	* callback/trampoline_r/trampoline_r.h.in, trampoline/trampoline.h.in:
	add autoconf CPU detection block; this fixes trampoline on sparc64/linux
	Suggested by Valeriy E. Ushakov <uwe@netbsd.org>

2010-07-20  Valeriy E. Ushakov  <uwe@netbsd.org>

	https://savannah.gnu.org/bugs/?22081
	support sparc64 for solaris & *bsd
	* avcall/avcall-sparc64.c, avcall/avcall.h.in:
	Kill callee (%g2). Sparc64 doesn't need that code.
	Delete space[] - gcc optimizes it away anyway, and it doesn't
	guarantee correct operation even if it's not removed - if compiler
	allocs it below other local vars on the stack, then calling
	function with enough arguments will clobber local vars.
	Instead i've changed the code to use alloca, see the comment in
	the code for details on why this works. It also doesn't waste 2K
	of stack on each call, we only grab the space we actually need.
	I nuked farg_mask. It's not necessary for float args, marking
	them in darg_mask does the right thing (new av_float). And they
	just hurt structure passing, where, again, marking up darg_mask
	does the right thing.
	* avcall/avcall-saprc64.S: Regenerated with NetBSD gcc4
	* vacall/vacall-sparc64.S, callback/vacall_r/vacall-sparc64.S:
	New binutils on sparc64 insist on having global registers properly
	declared with .register. I've just added the declarations manually
	w/out actually regenerating the files to demonstrate that's the
	only change needed there. IF the files are regenerated with a
	newer compiler you will get them automatically.

2009-11-10  Sam Steingold  <sds@gnu.org>

	* vacall/Makefile.in (vacall-armel.o): vacall-armel.s is in $(srcdir)
	* callback/vacall_r/Makefile.in (vacall-armel.lo): ditto

2009-10-16  Sam Steingold  <sds@gnu.org>

	the final fix for LIBFFCALL_VERSION
	* Makefile.devel (vacall/vacall.h.msvc, vacall/vacall.h.mingw32)
	(callback/vacall_r/vacall_r.h.msvc)
	(callback/vacall_r/vacall_r.h.mingw32): depend on VERSION
	* avcall/avcall.h.in, callback/callback.h.in,
	* callback/trampoline_r/trampoline_r.h.in, vacall/vacall.h.in,
	* callback/vacall_r/vacall_r.h.in, trampoline/trampoline.h.in:
	use @LIBFFCALL_VERSION@ instead of @PACKAGE_VERSION@
	* avcall/configure.in: additional processing for avcall.h to
	substitute @LIBFFCALL_VERSION@
	* callback/configure.in: ditto for callback.h
	* callback/trampoline_r/configure.in: ditto for trampoline_r.h
	* callback/vacall_r/configure.in: ditto for vacall_r.h
	* trampoline/configure.in: ditto for trampoline.h
	* vacall/configure.in: ditto for vacall.h
	* callback/vacall_r/Makefile.devel (vacall_r.h.msvc)
	(vacall_r.h.mingw32): depend on ../../VERSION;
	substitute @LIBFFCALL_VERSION@
	* vacall/Makefile.devel (vacall.h.msvc, vacall.h.mingw32): depend
	on ../VERSION; substitute @LIBFFCALL_VERSION@

2009-10-16  Sam Steingold  <sds@gnu.org>

	* glm4/longlong.m4, glm4/nocrash.m4: update from gnulib

2009-10-16  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (update-gnulib): use git when available

2009-10-16  Sam Steingold  <sds@gnu.org>

	* avcall/configure.in, callback/configure.in,
	* callback/trampoline_r/configure.in, callback/vacall_r/configure.in,
	* trampoline/configure.in, vacall/configure.in: list the main generated
	header (avcall.h et al) in AC_CONFIG_HEADERS, not in AC_CONFIG_FILES
	fixes the bug#27706 (introduced on 2009-04-24)

2009-04-28  Sam Steingold  <sds@gnu.org>

	* m4/general.m4 (FFCALL_CACHE_EGREP_CPP, FFCALL_SET_CPU_ABI):
	abstracted out of FFCALL_CANONICAL_HOST_CPU
	(FFCALL_CANONICAL_HOST_CPU): use them

2009-04-27  Max Lapan  <max.lapan@gmail.com>
	Sam Steingold  <sds@gnu.org>

	* avcall/Makefile.devel, avcall/Makefile.in, avcall/avcall.h.in,
	* callback/trampoline_r/Makefile.devel,
	* callback/trampoline_r/Makefile.in,
	* callback/trampoline_r/configure.in,
	* callback/vacall_r/Makefile.devel, callback/vacall_r/Makefile.in,
	* callback/vacall_r/vacall_r.h.in, trampoline/Makefile.devel,
	* trampoline/Makefile.in, trampoline/configure.in,
	* vacall/Makefile.devel, vacall/Makefile.in, vacall/vacall.h.in:
	Add ARMel support <https://savannah.gnu.org/bugs/?22492>
	* m4/general.m4 (FFCALL_CANONICAL_HOST_CPU): use AC_EGREP_CPP to
	distinguish between arm and armel
	* avcall/avcall-armel.S, avcall/avcall-armel.c,
	* callback/trampoline_r/cache-armel.c,
	* callback/trampoline_r/cache-armel.s,
	* callback/vacall_r/vacall-armel.c, callback/vacall_r/vacall-armel.s,
	* trampoline/cache-armel.c, trampoline/cache-armel.s,
	* vacall/vacall-armel.c, vacall/vacall-armel.s:
	new files

2009-04-27  Max Lapan  <max.lapan@gmail.com>

	* avcall/tests.c, callback/tests.c, vacall/tests.c:
	#include "config.h" for HAVE_LONG_LONG_INT

2009-04-27  Max Lapan  <max.lapan@gmail.com>

	* callback/trampoline_r/trampoline.c (is_tramp) [__arm__]:
	fix bug in the last patch

2009-04-24  Sam Steingold  <sds@gnu.org>

	* avcall/configure.in, callback/configure.in,
	* callback/trampoline_r/configure.in, callback/vacall_r/configure.in,
	* trampoline/configure.in, vacall/configure.in:
	use AC_CONFIG_FILES instead of AC_OUTPUT with argument
	* Makefile.devel (aclocal.m4): adjust the grep regexp

2009-04-24  Sam Steingold  <sds@gnu.org>

	* Makefile.in, avcall/Makefile.in, callback/Makefile.in,
	* callback/trampoline_r/Makefile.in, callback/vacall_r/Makefile.in,
	* trampoline/Makefile.in, vacall/Makefile.in (datarootdir):
	set to @datarootdir@ to avoid a configure warning

2009-04-24  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (SUBDIRS_CONFIG_H): add avcall and callback

2009-04-24  Sam Steingold  <sds@gnu.org>

	* VERSION: new file
	* configure.in: use AC_INIT with the version argument
	* avcall/Makefile.mingw32: use sed to set LIBFFCALL_VERSION in avcall.h
	* callback/vacall_r/Makefile.mingw32:
	use sed to set LIBFFCALL_VERSION in vacall_r.h
	* vacall/Makefile.mingw32: use sed to set LIBFFCALL_VERSION in vacall.h
	* avcall/avcall.h.in, callback/callback.h.in,
	* callback/trampoline_r/trampoline_r.h.in,
	* callback/vacall_r/vacall_r.h.in,
	* trampoline/trampoline.h.in, vacall/vacall.h.in:
	(LIBFFCALL_VERSION): define to @PACKAGE_VERSION@
	* avcall/configure.in, callback/configure.in,
	* callback/trampoline_r/configure.in, callback/vacall_r/configure.in,
	* trampoline/configure.in, vacall/configure.in:
	use AC_INIT with the version argument,
	pass [config.h] to AC_CONFIG_HEADERS

2009-04-23  Sam Steingold  <sds@gnu.org>

	* m4/codeexec.m4, m4/ireg.m4, m4/pccstruct.m4, m4/smallstruct.m4:
	all 3 arguments of AC_DEFINE are now required

2009-04-21  Sam Steingold  <sds@gnu.org>

	* m4/as-underscore.m4, m4/codeexec.m4, m4/general.m4:
	* m4/getpagesize.m4, m4/ireg.m4, m4/mach-vm.m4, m4/mmap.m4:
	* m4/mprotect.m4, m4/pccstruct.m4, m4/shm.m4, m4/smallstruct.m4:
	quote AC_DEFINE arguments

2008-09-28  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (aclocal.m4): include glm4 (this defined gl_EARLY
	and gl_INIT and fixes make check on x86_64)

2008-09-26  Sam Steingold  <sds@gnu.org>

	* avcall/avcall-ia64.s, avcall/avcall.h.in:
	* callback/vacall_r/vacall_r.h.in:
	support IA64 on Linux (kernel 2.6.16+ and gcc 4.1.0+)
	https://savannah.gnu.org/bugs/index.php?22130
	http://sourceforge.net/tracker/index.php?func=detail&aid=1528895&group_id=1355&atid=301355

2008-09-26  Sam Steingold  <sds@gnu.org>

	* callback/trampoline_r/Makefile.in, callback/trampoline_r/cache-arm.c:
	* callback/trampoline_r/cache-arm.s, callback/trampoline_r/configure.in:
	* callback/trampoline_r/tramp-arm.s, callback/trampoline_r/tramp-mips.s:
	* callback/trampoline_r/trampoline.c, trampoline/cache-arm.c:
	* trampoline/cache-arm.s, trampoline/configure.in:
	* trampoline/tramp-arm.s, trampoline/trampoline.c:
	add arm support from Jonathan Olson (debian 1.10-2)
	https://savannah.gnu.org/bugs/?func=detailitem&item_id=9468

2008-09-26  Sam Steingold  <sds@gnu.org>

	* avcall/avcall-mips.S, avcall/avcall-mips.c, avcall/avcall.h.in:
	* callback/trampoline_r/trampoline.c, callback/vacall_r/vacall_r.h.in:
	* m4/general.m4, trampoline/trampoline.c, vacall/vacall.h.in:
	add mipsel support from Thiemo Seufer (debian 1.10-2)

2008-09-26  Sam Steingold  <sds@gnu.org>

	* Makefile.devel, Makefile.in, callback/Makefile.devel,
	* callback/Makefile.in: use "&&" instead of ";" for all targets

2008-07-13  Sam Steingold  <sds@gnu.org>

	* glm4/gnulib-cache.m4, glm4/gnulib-common.m4, glm4/gnulib-comp.m4:
	* glm4/gnulib-tool.m4, glm4/onceonly.m4: add from gnulib
	* glm4/nocrash.m4: update from gnulib
	* Makefile.devel (gnulib-imported): remove gllib
	* configure.ac: call gl_EARLY and gl_INIT

2008-07-08  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (SUBDIRS_CONFIGURE): use $(CURDIR) instead of .
	(%/configure): use "&&" instead of ";"

2008-07-03  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (all): split into a few manageable targets
	(config-h-in, woe32-h, woe32-c): new targets
	(configure): use patterns

2008-07-03  Sam Steingold  <sds@gnu.org>

	* m4/smallstruct.m4 (FFCALL_SMALL_STRUCT_RETURN): rename from
	CL_SMALL_STRUCT_RETURN; use ffcall_cv_* instead of cl_cv_*;
	use return instead of exit()
	* m4/pccstruct.m4 (FFCALL_PCC_STRUCT_RETURN): rename from
	CL_PCC_STRUCT_RETURN; use ffcall_cv_* instead of cl_cv_*;
	use return instead of exit()
	* m4/ireg.m4 (FFCALL_IREG_FLOAT_RETURN): remame from
	CL_IREG_FLOAT_RETURN; use ffcall_cv_* instead of cl_cv_*;
	use return instead of exit()
	* m4/codeexec.m4 (FFCALL_CODEEXEC): rename from CL_CODEEXEC
	use ffcall_cv_* instead of cl_cv_*; use return instead of exit()
	* m4/general.m4: remove non-FFCALL code
	(FFCALL_COMMON_LIBTOOL): rename from CL_FFCALL_COMMON_LIBTOOL
	(FFCALL_COMMON_TRAMPOLINE): rename from CL_FFCALL_COMMON_TRAMPOLINE
	(FFCALL_CANONICAL_HOST_CPU): <- CL_CANONICAL_HOST_CPU_FOR_FFCALL

2008-07-03  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (build-aux-update): new target

2008-07-02  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (gnulib-imported, update-gnulib): new targets
	* glm4: new directory
	* longlong.m4, nocrash.m4: move from m4 to glm4

2008-07-02  Sam Steingold  <sds@gnu.org>

	* m4/ln.m4: update from clisp
	* m4/cp.m4: remove
	* m4/getpagesize.m4: update from clisp
	* m4/general.m4: update from clisp
	* m4/mmap.m4: update from clisp
	* m4/mprotect.m4: update from clisp
	* m4/proto.m4: update from clisp
	* m4/openflags.m4: remove
	* m4/cc-void.m4: remove

2008-07-02  Sam Steingold  <sds@gnu.org>

	* Makefile.devel, aclocal.m4: move autoconf/aclocal.m4 to aclocal.m4
	* aclocal/autoconf.m4: remove
	* Makefile.devel (CLISP_DIR): remove

2008-07-02  Sam Steingold  <sds@gnu.org>

	* m4/ffcall-pccstruct.m4, m4/ffcall-smallstruct.m4, m4/ffcall-ireg.m4:
	* m4/ffcall-codeexec.m4: remove "ffcall-" prefix
	* Makefile.devel: update

See clisp ChangeLog for earlier changes.
