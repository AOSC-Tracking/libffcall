All you need to know when hacking (modifying) GNU libffcall or when building
it off the git repository.


Requirements
============

You will need reasonably recent versions of the build tools:

  * A C compiler. Such as GNU GCC.
    + Homepage:
      http://gcc.gnu.org/

  * GNU automake
    + Homepage:
      http://www.gnu.org/software/automake/
    You need a particular version of GNU automake.
    See the comments at the top of Makefile.maint for details.

  * GNU autoconf
    + Homepage:
      http://www.gnu.org/software/autoconf/
    You need a particular version of GNU autoconf and set a couple of symbolic
    links. See the comments at the top of Makefile.maint for details.

  * GNU m4
    + Homepage:
      http://www.gnu.org/software/m4/

  * GNU groff 1.17 or newer
    + Homepage:
      http://www.gnu.org/software/groff/

  * Either an internet connection or a recent copy of GNU gnulib.
    + Homepage:
      http://www.gnu.org/software/gnulib/

  * GNU tar (for creating distributable tarballs)
    + Homepage:
      http://www.gnu.org/software/tar/

And, of course, the packages listed in the DEPENDENCIES file.


Cross-compilation tools
=======================

The Makefile.devel has rules to regenerate some *.s and *.S files, using
GCC cross-compiler builds. You find a table of these cross-compilers in
the file cross-tools/cross.conf.

To build all these cross-compilers, use the file cross-tools/cross-build.sh.
See the comments at the top of cross-tools/cross-build.sh for how to use it.
When done, copy the generated 'cross' script into your $PATH so that
Makefile.devel will find it.


Building off the git repository
===============================

Access to the git repository is described at
  http://savannah.gnu.org/git/?group=libffcall

After fetching the sources from the repository:

1. Create the cross-compilation tools, as described above.

2. Regenerate the *.s and *.S files, by running
     make -f Makefile.devel

3. Run
     ./autogen.sh

4. Then you can proceed with
     ./configure
   as usual.

